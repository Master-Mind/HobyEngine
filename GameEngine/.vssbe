{
  "Header": {
    "_": [
      " This file for vsSolutionBuildEvent ",
      " https://github.com/3F/vsSolutionBuildEvent "
    ],
    "Compatibility": "0.12.4"
  },
  "PreBuild": [
    {
      "Enabled": false,
      "Name": "RunReflectionParser",
      "IgnoreIfBuildFailed": true,
      "ExecutionOrder": {
        "$type": "net.r_eg.vsSBE.Events.ExecutionOrder[], vsSolutionBuildEvent",
        "$values": [
          {
            "Project": "Debugger",
            "Order": "Before"
          },
          {
            "Project": "Editor",
            "Order": "Before"
          },
          {
            "Project": "GUISystem",
            "Order": "Before"
          },
          {
            "Project": "GameEngine",
            "Order": "Before"
          },
          {
            "Project": "Graphics",
            "Order": "Before"
          },
          {
            "Project": "Memory",
            "Order": "Before"
          },
          {
            "Project": "Physics",
            "Order": "Before"
          },
          {
            "Project": "ReflectionParser",
            "Order": "Before"
          },
          {
            "Project": "ReflectionSystem",
            "Order": "Before"
          },
          {
            "Project": "ReflectionTest",
            "Order": "Before"
          },
          {
            "Project": "Utilities",
            "Order": "Before"
          }
        ]
      },
      "Process": {
        "$type": "net.r_eg.vsSBE.Events.EventProcess, vsSolutionBuildEvent",
        "Waiting": true,
        "Hidden": true,
        "TimeLimit": 60
      },
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeCSharp, vsSolutionBuildEvent",
        "Type": "CSharp",
        "References": [
          "System.dll",
          "EnvDTE"
        ],
        "SmartReferences": true,
        "GenerateInMemory": true,
        "TreatWarningsAsErrors": false,
        "WarningLevel": 4,
        "FilesMode": false,
        "CachingBytecode": false,
        "LastTime": 0,
        "Command__": [
          "using net.r_eg.vsSBE;",
          "using ICommand = net.r_eg.vsSBE.Actions.ICommand;",
          "using ISolutionEvent = net.r_eg.vsSBE.Events.ISolutionEvent;",
          "using System;",
          "using System.IO;",
          "using System.Diagnostics;",
          "",
          "namespace vsSolutionBuildEvent",
          "{",
          "    public class CSharpMode",
          "    {",
          "        public static int Init(ICommand cmd, ISolutionEvent evt)",
          "        {",
          "            String parserPath = Directory.GetCurrentDirectory() + \"\\\\ReflectionParser\\\\bin\\\\Win64\\\\Release\\\\ReflectionParser.exe\";",
          "            ",
          "            if(!File.Exists(parserPath))",
          "            {",
          "                throw new System.InvalidOperationException(\"The reflection parser release exe does not exist at \" + parserPath + \",\\n this should have been build already. Disable this build event and build the \\\"ReflectionParser\\\" project real quick\");",
          "            }",
          "            ",
          "            Process parserProc = Process.Start(parserPath, \"GameEngine.sln\");",
          "            ",
          "            if (parserProc == null)",
          "            {",
          "                throw new System.InvalidOperationException(\"Could not start the process at \" + parserPath + \" for some reason\");",
          "            }",
          "            ",
          "            while (!parserProc.HasExited) {}",
          "            ",
          "            if (parserProc.ExitCode != 0)",
          "            {",
          "                throw new System.InvalidOperationException(\"The Reflection Parser exited with code \" + parserProc.ExitCode.ToString());",
          "            }",
          "            ",
          "            return 0;",
          "        }",
          "    }",
          "}"
        ]
      }
    }
  ]
}